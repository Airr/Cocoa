<?xml version="1.0" encoding="UTF-8"?>
<RBProject version="2013r3.2" FormatVersion="2" MinIDEVersion="20070100">
<block type="Module" ID="871613483">
 <ObjName>NSURL</ObjName>
 <ObjContainerID>1021742600</ObjContainerID>
 <IsClass>1</IsClass>
 <ItemFlags>1</ItemFlags>
 <IsInterface>0</IsInterface>
 <Compatibility></Compatibility>
 <Method>
  <ItemName>FromString</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine> Shared Function FromString(URL As String) As NSURL</SourceLine>
   <SourceLine>// An NSURL object represents a URL that can potentially contain the location</SourceLine>
   <SourceLine>// of a resource on a remote server, the path of a local file on disk, or even an arbitrary piece of encoded data.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// You can use URL objects to construct URLs and access their parts. For URLs that</SourceLine>
   <SourceLine>// represent local files, you can also manipulate properties of those files directly,</SourceLine>
   <SourceLine>// such as changing the file’s last modification date. Finally, you can pass URL objects</SourceLine>
   <SourceLine>// to other APIs to retrieve the contents of those URLs.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>DIM returnValue As NSURL</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if not TargetCocoa</SourceLine>
   <SourceLine>Declare Function URLWithString Lib "Cocoa" Selector "URLWithString:" (classRef As Ptr, URLString As CFStringRef) As Ptr</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>DIM instanceRef As Ptr = URLWithString(NSURLClassRef, URL)</SourceLine>
   <SourceLine>if (instanceRef &lt;&gt; Nil) then</SourceLine>
   <SourceLine>returnValue = NEW NSURL(instanceRef)</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>DIM aRegEx As NEW RegEx</SourceLine>
   <SourceLine>aRegEx.SearchPattern = "^((?P&lt;schema&gt;[^:\/?#]+):)?(\/?\/?(?P&lt;authority&gt;[^\/?#]*))?(?P&lt;path&gt;[^?#]*)(\?(?P&lt;query&gt;[^#]*))?(#(?P&lt;fragment&gt;.*))?$"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>DIM match As RegExMatch</SourceLine>
   <SourceLine>match = aRegEx.Search(URL)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>DIM count As Integer = match.SubExpressionCount</SourceLine>
   <SourceLine>if (count &gt; 0) then</SourceLine>
   <SourceLine>returnValue = NEW NSURL()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>returnValue.mScheme = match.SubExpressionString(2)  ' scheme</SourceLine>
   <SourceLine>returnValue.mResourceSpecifier = match.SubExpressionString(3)</SourceLine>
   <SourceLine>returnValue.ParseAuthority match.SubExpressionString(4)  ' authority</SourceLine>
   <SourceLine>returnValue.mPath = match.SubExpressionString(5)  ' path</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if (count &gt; 6) then</SourceLine>
   <SourceLine>returnValue.mResourceSpecifier = returnValue.mResourceSpecifier + match.SubExpressionString(6)</SourceLine>
   <SourceLine>returnValue.mQuery = match.SubExpressionString(7)  ' query</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if (count = 10) then</SourceLine>
   <SourceLine>returnValue.mResourceSpecifier = returnValue.mResourceSpecifier + match.SubExpressionString(8)</SourceLine>
   <SourceLine>returnValue.mFragment = match.SubExpressionString(9)  ' fragment</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>returnValue.mAbsoluteString = URL</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>Return returnValue  // can be nil</SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>URL As String</ItemParams>
  <ItemResult>NSURL</ItemResult>
 </Method>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor()</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>ParseAuthority</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub ParseAuthority(authority As String)</SourceLine>
   <SourceLine>// An NSURL object represents a URL that can potentially contain the location</SourceLine>
   <SourceLine>// of a resource on a remote server, the path of a local file on disk, or even an arbitrary piece of encoded data.</SourceLine>
   <SourceLine>//</SourceLine>
   <SourceLine>// You can use URL objects to construct URLs and access their parts. For URLs that</SourceLine>
   <SourceLine>// represent local files, you can also manipulate properties of those files directly,</SourceLine>
   <SourceLine>// such as changing the file’s last modification date. Finally, you can pass URL objects</SourceLine>
   <SourceLine>// to other APIs to retrieve the contents of those URLs.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>// create the RegEx object and add our expression as the search pattern</SourceLine>
   <SourceLine>DIM aRegEx As NEW RegEx</SourceLine>
   <SourceLine>aRegEx.SearchPattern = "(?:(?P&lt;userinfo&gt;(?:[A-Za-z0-9\-._~!$&amp;\'()*+,;=:]|%[0-9A-Fa-f]{2})*)@)?(?P&lt;host&gt;(?:[A-Za-z0-9\-._~!$&amp;\'()*+,;=]|%[0-9A-Fa-f]{2})+)(?::(?P&lt;port&gt;[0-9]*))?"</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>DIM match As RegExMatch</SourceLine>
   <SourceLine>match = aRegEx.Search(authority)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>DIM count As Integer = match.SubExpressionCount</SourceLine>
   <SourceLine>if (count &gt; 0) then</SourceLine>
   <SourceLine>DIM credentials() As String = Split(match.SubExpressionString(1), ":")</SourceLine>
   <SourceLine>REDIM credentials(1)  // make sure there are two elements (user, password) Note: can be empty</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.mUser = credentials(0)  // The user portion of the URL</SourceLine>
   <SourceLine>me.mPassword = credentials(1)  // The password of the URL</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>me.mHost = match.SubExpressionString(2)  // The host of the URL</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>if (count = 4) then  // custom port</SourceLine>
   <SourceLine>me.mPort = Val(match.SubExpressionString(3))</SourceLine>
   <SourceLine>end if</SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>authority As String</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>NSURLClassRef</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Shared Function NSURLClassRef() As Ptr</SourceLine>
   <SourceLine>#if TargetCocoa</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>static classRef As Ptr = NSClassFromString("NSURL")</SourceLine>
   <SourceLine>Return classRef</SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <ExternalMethod>
  <ItemName>NSClassFromString</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Declare Function NSClassFromString Lib "Cocoa" (className As CFStringRef) As Ptr</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>className As CFStringRef</ItemParams>
  <ItemResult>Ptr</ItemResult>
  <LibraryName>Cocoa</LibraryName>
  <SoftLink>0</SoftLink>
 </ExternalMethod>
 <Method>
  <ItemName>Constructor</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Sub Constructor(instanceRef As Ptr)</SourceLine>
   <SourceLine>#if TargetCocoa</SourceLine>
   <SourceLine>me.mInstanceRef = instanceRef</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Sub</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams>instanceRef As Ptr</ItemParams>
  <ItemResult></ItemResult>
 </Method>
 <Method>
  <ItemName>Operator_Convert</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Function Operator_Convert() As Ptr</SourceLine>
   <SourceLine>#if TargetCocoa</SourceLine>
   <SourceLine>Return me.mInstanceRef</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <ItemParams></ItemParams>
  <ItemResult>Ptr</ItemResult>
 </Method>
 <Method>
  <ItemName>FromFolderItem</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine> Shared Function FromFolderItem(aFolderItem As FolderItem) As NSURL</SourceLine>
   <SourceLine>try</SourceLine>
   <SourceLine>Return FromString(aFolderItem.URLPath)</SourceLine>
   <SourceLine>end try</SourceLine>
   <SourceLine>End Function</SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <AliasName></AliasName>
  <ItemFlags>0</ItemFlags>
  <IsShared>1</IsShared>
  <ItemParams>aFolderItem As FolderItem</ItemParams>
  <ItemResult>NSURL</ItemResult>
 </Method>
 <Note>
  <ItemName>Notes</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <NoteLine>Notes</NoteLine>
   <NoteLine>This is not a complete implementation, but it is cross-platform</NoteLine>
   <NoteLine></NoteLine>
   <NoteLine></NoteLine>
  </ItemSource>
  <ItemFlags>0</ItemFlags>
 </Note>
 <Property>
  <ItemName>mScheme</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mScheme As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mScheme As String</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mUser</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mUser As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mUser As String</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mPassword</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mPassword As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mPassword As String</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mHost</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mHost As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mHost As String</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mPort</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mPort As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mPort As Integer</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mPath</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mPath As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mPath As String</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mQuery</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mQuery As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mQuery As String</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mFragment</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mFragment As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mFragment As String</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>mInstanceRef</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mInstanceRef As Ptr</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mInstanceRef As Ptr</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>Fragment</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Fragment As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Fragment As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>// Returns the fragment of a URL conforming to RFC 1808</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetCocoa</SourceLine>
   <SourceLine>Declare Function fragment Lib "Cocoa" Selector "fragment" (instanceRef As Ptr) As CFStringRef</SourceLine>
   <SourceLine>Return fragment(me)</SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>Return me.mFragment</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Host</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Host As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Host As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>// Returns the host of a URL conforming to RFC 1808</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetCocoa</SourceLine>
   <SourceLine>Declare Function host Lib "Cocoa" Selector "host" (instanceRef As Ptr) As CFStringRef</SourceLine>
   <SourceLine>Return host(me)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>Return me.mHost</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>AbsoluteString</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>AbsoluteString As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>AbsoluteString As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>// Returns the URL string for the receiver as if it were an absolute URL.</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetCocoa</SourceLine>
   <SourceLine>Declare Function absoluteString Lib "Cocoa" Selector "absoluteString" (instanceRef As Ptr) As CFStringRef</SourceLine>
   <SourceLine>Return absoluteString(me)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Password</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Password As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Password As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>// Returns the password of a URL conforming to RFC 1808</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetCocoa</SourceLine>
   <SourceLine>Declare Function password Lib "Cocoa" Selector "password" (instanceRef As Ptr) As CFStringRef</SourceLine>
   <SourceLine>Return password(me)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>Return me.mPassword</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Path</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Path As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Path As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>// Returns the path of a URL conforming to RFC 1808</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetCocoa</SourceLine>
   <SourceLine>Declare Function path Lib "Cocoa" Selector "path" (instanceRef As Ptr) As CFStringRef</SourceLine>
   <SourceLine>Return path(me)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>Return me.mPath</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Port</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Port As Integer</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Port As Integer</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>// Returns the port number of a URL conforming to RFC 1808</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetCocoa</SourceLine>
   <SourceLine>Declare Function port Lib "Cocoa" Selector "port" (instanceRef As Ptr) As CFStringRef</SourceLine>
   <SourceLine>Return Val(port(me))</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>Return me.mPort</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Query</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Query As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Query As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>// Returns the query string from a URL conforming to RFC 1808</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetCocoa</SourceLine>
   <SourceLine>Declare Function query Lib "Cocoa" Selector "query" (instanceRef As Ptr) As CFStringRef</SourceLine>
   <SourceLine>Return query(me)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>Return me.mQuery</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>Scheme</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Scheme As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>Scheme As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>// Returns the scheme of the URL</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetCocoa</SourceLine>
   <SourceLine>Declare Function scheme Lib "Cocoa" Selector "scheme" (instanceRef As Ptr) As CFStringRef</SourceLine>
   <SourceLine>Return scheme(me)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>Return me.mScheme</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>User</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>User As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>User As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>// Returns the user portion of a URL conforming to RFC 1808</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetCocoa</SourceLine>
   <SourceLine>Declare Function user Lib "Cocoa" Selector "user" (instanceRef As Ptr) As CFStringRef</SourceLine>
   <SourceLine>Return user(me)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>Return me.mUser</SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>mAbsoluteString</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mAbsoluteString As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mAbsoluteString As String</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <Property>
  <ItemName>ResourceSpecifier</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Property ResourceSpecifier As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>ResourceSpecifier As String</ItemDeclaration>
  <ItemFlags>0</ItemFlags>
  <IsShared>0</IsShared>
  <SetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Set</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>End Set</SourceLine>
  </SetAccessor>
  <GetAccessor>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>Get</SourceLine>
   <SourceLine>// Return Value</SourceLine>
   <SourceLine>// The resource specifier of the URL. For example, in the URL </SourceLine>
   <SourceLine>// http://www.example.com/index.html?key1=value1#jumplink, the resource specifier </SourceLine>
   <SourceLine>// is //www.example.com/index.html?key1=value1#jumplink (everything after the colon).</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#if TargetCocoa</SourceLine>
   <SourceLine>Declare Function resourceSpecifier Lib "Cocoa" Selector "resourceSpecifier" (instanceRef As Ptr) As CFStringRef</SourceLine>
   <SourceLine>Return resourceSpecifier(me)</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#else</SourceLine>
   <SourceLine>DIM returnValue As String</SourceLine>
   <SourceLine></SourceLine>
   <SourceLine>#endif</SourceLine>
   <SourceLine>End Get</SourceLine>
  </GetAccessor>
 </Property>
 <Property>
  <ItemName>mResourceSpecifier</ItemName>
  <Compatibility></Compatibility>
  <Visible>1</Visible>
  <ItemSource>
   <TextEncoding>134217984</TextEncoding>
   <SourceLine>mResourceSpecifier As String</SourceLine>
   <SourceLine></SourceLine>
  </ItemSource>
  <TextEncoding>134217984</TextEncoding>
  <ItemDeclaration>mResourceSpecifier As String</ItemDeclaration>
  <ItemFlags>33</ItemFlags>
  <IsShared>0</IsShared>
 </Property>
 <ViewBehavior>
  <ViewProperty>
   <ObjName>Name</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Index</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <PropertyValue>-2147483648</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Super</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>ID</PropertyGroup>
   <ItemType>String</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Left</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Top</ObjName>
   <Visible>1</Visible>
   <PropertyGroup>Position</PropertyGroup>
   <PropertyValue>0</PropertyValue>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Fragment</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Host</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>AbsoluteString</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Password</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Path</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Port</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>Integer</ItemType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Query</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>Scheme</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
  <ViewProperty>
   <ObjName>User</ObjName>
   <PropertyGroup>Behavior</PropertyGroup>
   <ItemType>String</ItemType>
   <EditorType>MultiLineEditor</EditorType>
  </ViewProperty>
 </ViewBehavior>
</block>
</RBProject>
